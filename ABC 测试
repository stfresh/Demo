学习链接：
目录	链接	demo代码
JAVA基础	JAVA编程思想：第四版PDF	
Hibernate-Validate	https://blog.csdn.net/u011781521/article/details/72510328	
messages	https://www.baeldung.com/spring-custom-validation-message-source	
jasyptspringboot	https://www.baeldung.com/spring-boot-jasypt	IAF->Dataloader->Application.java->EncryptablePropertyDetector/EncryptablePropertyResolver/StringEncryptor
commons-lang3	https://blog.51cto.com/linhongyu/1553329	
guava	https://ifeve.com/google-guava/	
commons-io	https://blog.csdn.net/wangyanming123/article/details/80217747	
commons-collections4	https://www.baeldung.com/apache-commons-collection-utilshttps://www.baeldung.com/apache-commons-setutilshttps://www.baeldung.com/apache-commons-map-utilshttps://commons.apache.org/proper/commons-collections/apidocs/org/apache/commons/collections4/ListUtils.html	
okhttp3	https://www.jianshu.com/p/da4a806e599b	
slf4j-api+logback	https://www.jianshu.com/p/696444e1a352	
Jackson	https://www.jianshu.com/p/f3fc3bf6dd2b	
powermock/Springboottest/mockit	https://juejin.im/post/5be7eaf26fb9a049d4415278https://www.jianshu.com/p/51930cc5dcf9https://www.baeldung.com/spring-boot-testing	Webscan-service->PortScanTaskControllerTest

二方件：加解密：crypto
配置读取：commons-utils

i18n框架：messages
参数校验：Hibernate-Validate

代码模板：Checkstyle
缓存框架：guava
Map/List数组处理：commons-collections4
Rest请求处理：okhttp3
日志框架：slf4j -api +logback;
配置加密：jasyptspringboot
Tomcat：变量配置 日志查看



华为云计算公司
Java后端开发实习生 安全产品服务部
Web应用防火墙 WAF
项目简介：

通过过滤和监控 Web 应用与互联网之间的 HTTP(S) 流量，识别并阻断SQL 注入、XSS、CRLF、CC攻击、代码注入、命令注入、恶意爬虫扫描等攻击，保护Web服务安全稳定。
为客户提供域名防护、防护规则变更以及实时查看防护日志，分析防护事件数据等服务。
- 协助定位并修复生产环境中的BUG
- 编写组件单元测试，确保组件各项功能正常和API的可靠性
- 参与WAF运维运营平台对接普罗开发，提供查询接口并采用Spring Task定时执行查询和更新信息

----------------------------------------------------------------
-WAF云服务功能是Web应用防火墙（Web Application Firewall，WAF），
对网站业务流量进行全方位检测和防护，智能识别恶意请求特征和防御未知威胁，避免源站被黑客恶意攻击和入侵，防止核心资产遭窃取，为网站业务提供安全保障。
-为华为云用户提供Web安全防护服务，满足云上Web应用/网站的安全防护需求。
-聚焦互联网和政企云原生，保障A3客迁
--------------------------------------------------------------------
-Web安全防护能力
Web正常流量转发。
支持Web基础保护，覆盖OWASP TOP10常见安全威胁。
支持CC攻击防护，限制单个IP/Cookie/Referer访问者对网站上特定路径（URL）的访问频率。
支持精准访问保护，对常见的HTTP字段（如IP、路径、Referer、User Agent、Params等）进行条件组合，用来筛选访问请求，并对命中条件的请求设置放行或阻断操作。
支持黑白名单设置，添加始终拦截与始终放行的黑白名单IP/IP地址段，增加防御准确性。
攻击惩罚设置，当访问者的IP、Cookie或Params恶意请求被WAF拦截时，通过配置攻击惩罚，使WAF按配置的攻击惩罚时长来自动封禁访问者。
地理位置访问控制，可以针对国外部分国家、国内省份的来源IP进行自定义访问控制。
网页防篡改，对网站的静态网页进行缓存配置，当用户访问时返回给用户缓存的正常页面，并随机检测网页是否被篡改。
网站反爬虫，动态分析网站业务模型，结合人机识别技术和数据风控手段，精准识别爬虫行为。
防敏感信息泄露，防止用户的敏感信息（如身份证号、电话号码、电子邮箱等）泄露，并能够拦截指定的HTTP响应码页面。
误报屏蔽，对WAF预置的Web基础防护规则拦截或记录的攻击事件可以配置误报屏蔽规则。通过设置URL和规则ID的忽略，可以使以后该URL再次发生攻击时，攻击事件详情列表中将不再出现攻击事件。
隐私屏蔽，通过设置隐私信息屏蔽，可以避免用户的密码等信息出现在事件日志中。


--------------------------交互流程
（1）租户在WAF上购买独享引擎实例；
1、租户在WAF控制台或者通过API购买独享引擎实例，将请求发送到后端WAF-Service服务；；
2、WAF-Service调用IAM、EPS服务的接口获取租户的IAM权限、企业项目信息，进行权限合法性检查；
3、WAF-Service创建购买任务，并将独享引擎实例信息和任务信息存储到ServiceDB；
4、WAF-Service调用IAM获取租户权限委托；
5、WAF-Service调用EVS接口查询可用的磁盘类型，调用VPC和ECS的接口创建安全组和虚拟机；
6、独享引擎ECS创建结束后，WAF-Service更新任务状态到ServiceDB；
7、WAF-Service调用CBC接口通知资源变更，上报审计日志到CTS，上报资源到RM服务；

（2）配置防护网站
1、租户在WAF控制台或者通过API创建网站，将请求发送到后端WAF-Service服务；
2、WAF-Service调用IAM、EPS与beller服务的接口获取租户的IAM权限、企业项目信息以及网站备案信息，进行权限与备案合法性检查；
3、WAF-Service调用CBC的接口获取租户的套餐信息；
4、WAF-Service调用DNS服务创建网站CName记录；
5、WAF-Service调用WAF-Manager接口创建防护网站；
6、WAF-Manager进行请求合法性检查后，将防护网站信息存储到ManagerDB；
7、WAF-Service将防护网站信息存储到ServiceDB；
8、防护网站创建结束后，WAF-Service上报审计日志到CTS，上报资源到RM服务；
9、租户在公网DNS上配置网站CName，将网站流量引入到WAF。

--------------------------------------
研发语言	Java、Lua、Python	基于公司推荐的开发语言。优先选择Java语言开发，借助于Java丰富生态，提高开发效率；业务面组件WAF-Engine基于开源OpenResty，基于生态出发使用Lua语言。运维面工具，功能简单，支持Java或者Python语言。

开发框架	SpringBoot	技术成熟，社区活跃，生态丰富，团队技术积累多

Console	angular框架，es6、html5、less、xml	基于CloudBU提供的统一框架，主流的界面开发语言

操作系统	EulerOS	公司统一要求，有团队提供安全加固、升级与维护。

SRE中间件	CloudDB，Zookeeper，Kafka，Tomcat，Nginx，MySQL	基于CloudBU提供的中间件服务进行选择，专门团队提供安全与维护服务

云基础服务	云搜索服务CSS，OBS	基于华为云提供的云服务进行选择，专门团队提供安全与维护服务

华为云十统一服务	基于CloudBU提供的十统一服务进行选择

开源三方件	ELK（elasticsearch，logstash，kibana）	用于日志收集、存储、分析与可视化。技术成熟，社区活跃
            FileBeat	轻量型日志采集器，性能高。技术成熟，社区活跃
            OpenResty	基于Nginx 与 Lua 的高性能 Web 平台，技术成熟，社区活跃。作为业务面组件WAF-Engine的基础开发框架。
            Prometheus、Grafana	系统监控、度量分析和可视化工具，配置简单，查询灵活。用在运维面的监控。
--------------------------------------------------
运行模型：
- （1）创建防护策略
1、租户在WAF控制台或者通过API创建防护策略，将请求发送到后端WAF-Service服务；
2、WAF-Service对于请求进行合法性校验，并将防护策略详细信息发送到WAF-Manager服务；
3、WAF-Manager对策略详情进行合法校验，然后创建策略详情实体对象并保存到数据库；
4、WAF-Service对租户的策略概要信息保存到数据库，然后返回请求状态到客户端；

-（2）防护策略同步与下发
1、WAF-Migration服务定时任务查询各Region的ManagerDB数据库，获取未同步的策略快照记录；
2、WAF-Migration服务将未同步的策略快照记录存储到GlobalDB数据库；
3、WAF-Manager服务定时查询GlobalDB的在对应Region的SlaveDB，获取全量策略快照记录；
4、WAF-Manager服务调用WAF-Engine接口查询各引擎的策略快照版本，并和全量策略快照记录的版本对比；
5、WAF-Managser服务调用WAF-Engine接口，将更新的策略快照记录下发到WAF-Engine服务；

-（3.1）云模式业务流量检测
1、租户网站的用户通过浏览器访问租户网站；
2、访问请求通过公网DNS的CName解析，然后引流到WAF-Engine节点；
3、WAF-Engine服务对租户域名的访问流量依据防护策略配置，进行攻击检测；
4、如果是攻击流量，则攻击拦截响应返回给访问端；如果是正常流量，则转发到租户的源站服务器，由租户源站服务器处理请求，返回请求响应；

-（3.2）独享引擎反向代理模式业务流量检测
1、租户网站的用户通过浏览器访问租户网站；
2、访问请求通过公网DNS或者VPN引流到租户的ELB，然后ELB引流到WAF-Engine节点；
3、WAF-Engine服务对租户域名的访问流量依据防护策略配置，进行攻击检测；
4、如果是攻击流量，则攻击拦截响应返回给ELB，再返回到访问端；如果是正常流量，则转发到租户的源站服务器，由租户源站服务器处理请求，再返回请求响应；

-（3.3）独享引擎旁路模式业务流量检测（独享引擎不参与流量转发，避免因额外引入一层转发而带来各种兼容性和稳定性问题。）
1、租户网站的用户通过浏览器访问租户网站；
2、访问请求通过公网DNS或者VPN引流到租户的ELB，然后ELB引流到WAF-Engine节点；
3、WAF-Engine服务对租户域名的访问流量依据防护策略配置，进行攻击检测，然后并将检测结果返回给ELB；
4、如果是攻击流量，则ELB将攻击拦截响应返回访问端；如果是正常流量，则ELB转发到租户的源站服务器，由租户源站服务器处理请求，再返回请求响应；



需求：WAF 运维运营平台对接普罗   新普罗运维平台对接

需求描述： WAF 运维运营平台对接普罗：在普罗平台上对接WAF运营运维平台

价值：内部运维优化

场景分析：
对接新运维平台，集成新功能，提高运维效率，涉及三部分功能：
1. 安全总览页面
   当前运维过程中，用户安全总览页面信息需要用户配合才能获取，不利于问题定位，新运维平台支持查询租户安全总览页面信息
   
2. 虚拟化集群集群管理
当前虚拟化集群通过人工手动维护表格，效率低下且容易出错；管理面通过定时器任务维护虚拟化集群信息，并提供运维接口查询对应局点的虚拟化集群信息
 
3. 资源管理
 该功能为WAF运维平台已有功能，集成到新运维平台。
 
整体鉴权方式：COA鉴权

可信设计原则应用（可选）
可信维度|设计原则|落地方式
可靠可用、 越简单越可靠原则 |内核模块业务逻辑尽量简单，复杂的业务逻辑放在业务模块
可靠可用 |基于失效设计（Design for Failure）| 基于“不信任”进行设计，充分考虑异常场景的处理、容错及恢复机制，禁止无限重试机制
可靠可用 |过载控制原则 |系统需要提供过载检测和控制功能，在负载过大的情况下，系统能够正常运行并提供一定的业务处理能力

 1）运维平台支持安全总览、防护策略、网站设置、防护事件
    1.1 WAF运维运营平台新增设置客户信息功能，输入待查询客户的domianId projectId  enterpriseProjectId regionId方可查询客户资源详情
    1.2 参考租户面console界面，移植租户面console安全总览、防护策略、网站设置、防护事件页面至WAF运维运营平台。移除增删改等功能
，仅支持查看功能， 方便快速查询客户所配置的详情
    1.3 WAF运维运营平台后台会对接现网的WAF管理面机器，查询安全总览、防护策略、网站设置、防护事件，查询接口沿用租户面相关接口，
由于对接的是COA鉴权，无法通过token获取必须的用户信息：domainId、projectId以及enterpriseProjectId，
因此需要前端在调用接口时传过来，参数放到请求头中，对应的Key分别为：Domain-Id、Project-Id以及Enterprise-Project-Id。

2）虚拟化集群管理
1. 后台定时任务，定时查询刷新虚拟集群信息，定时任务为每天夜里更新一次，新增表:
CREATE TABLE IF NOT EXISTS `virtual_cluster` (
    `id` varchar(50) NOT NULL,
    `cluster_id` varchar(64) NOT NULL,
    `cluster_name` varchar(256) NOT NULL,
    `domain_id` varchar(256) NOT NULL,
    `domain_name` varchar(256) NOT NULL,
    `create_time` bigint(20) DEFAULT '0',
    `update_time` bigint(20) DEFAULT '0',
    `delete_time` bigint(20) DEFAULT '0',
    PRIMARY KEY (`id`),
    INDEX idx_cluster_id (`cluster_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 保存虚拟集群后端实例组信息
CREATE TABLE IF NOT EXISTS `virtual_cluster_elb` (
    `id` varchar(50) NOT NULL,
    `cluster_id` varchar(64) NOT NULL,
    `elb_id` varchar(64) NOT NULL,
    `elb_name` varchar(256) NOT NULL,
    `elb_public_ips`  varchar(512) NOT NULL,
    `create_time` bigint(20) DEFAULT '0',
    `update_time` bigint(20) DEFAULT '0',
    `delete_time` bigint(20) DEFAULT '0',
    PRIMARY KEY (`id`),
    INDEX idx_cluster_id (`cluster_id`),
    INDEX idx_elb_id (`elb_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

保存虚拟集群后端实例信息：
CREATE TABLE IF NOT EXISTS `virtual_cluster_server` (
    `id` varchar(50) NOT NULL,
    `cluster_id` varchar(64) NOT NULL,
    `server_id` varchar(64) NOT NULL,
    `server_name` varchar(256) NOT NULL,
    `server_public_ips`  varchar(512) NOT NULL,
    `availability_zone`  varchar(32) NOT NULL,
    `float_ip` varchar(32) NOT NULL,
    `create_time` bigint(20) DEFAULT '0',
    `update_time` bigint(20) DEFAULT '0',
    `delete_time` bigint(20) DEFAULT '0',
    PRIMARY KEY (`id`),
    INDEX idx_cluster_id (`cluster_id`),
    INDEX idx_server_id (`server_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

 2. 虚拟化集群管理接口：
2.1 查询虚拟化集群列表接口 

GET /v1/waf/sys/virtual-clusters
ResposneBody:
{
    "total": 1,   // 虚拟集群总数
    "items" [
        { 
            "cluster_id": "xxx-xxx-xx",   //虚拟集群id
            "cluster_name": xxx-xxx-xx", //虚拟集群名称
            "domain_name": "op_svc_xxx", // 集群所使用承载租户账号
            "loadbalancers": [         // 关联的负载均衡器
                {
                    "loadbalancer_id": "xxx-xxx-xxx", // 负载均衡器id
                    "loadbalancer_name": "xxx-xxx-xxx", //负载均衡器名称
                    "public_ips": [                    // 公网ip
                        {
                            "publicip_address": "xx.xx.xx.xx", //IP 地址，入口IP
                            "ip_version": 4     //IP版本信息。 取值范围：4和6 4：IPv4 6：IPv6
                        }
                    ]
                }
            ],
            "update_time": xxxxxxxxxx   // 记录更新时间
        }
    ]
}
2.2 查询指定虚拟化集群详情接口
GET /v1/waf/sys/virtual-clusters/{cluster_id}
ResposneBody:

{ 
    "cluster_id": "xxx-xxx-xx",   //虚拟集群id
    "cluster_name": xxx-xxx-xx", //虚拟集群名称
    "domain_name": "op_svc_xxx" // 集群所使用承载租户账号
    "loadbalancers": [         // 关联的负载均衡器
        {
            "loadbalancer_id": "xxx-xxx-xxx", // 负载均衡器id
            "loadbalancer_name": "xxx-xxx-xxx", //负载均衡器名称
            "public_ips": [                    // 公网ip
                {
                    "publicip_address": "xx.xx.xx.xx", //IP 地址，入口IP
                    "ip_version": 4     //IP版本信息。 取值范围：4和6 4：IPv4 6：IPv6
                }
            ]
        }
    ],
    "servers": [        // 后端服务器组
        {
            "server_id": "xxx-xxx-xxx", // 后端服务器id
            "server_name": "xxx-xxx-xxx", //后端服务器名称
            "float_ip": xxx.xxx.xxx.xxx, // 浮动IP
            "public_ips": [                    // 公网ip
                {
                    "publicip_address": "xx.xx.xx.xx", //IP 地址，回源IP
                    "ip_version": 4     //IP版本信息。 取值范围：4和6 4：IPv4 6：IPv6
                }
            ]
        }
    ],
    "update_time": xxxxxxxxxx   // 记录更新时间
}
 2.3 刷新指定虚拟化集群接口
PUT /v1/waf/sys/virtual-clusters/{cluster_id}
ResposneBody:

{ 
    "cluster_id": "xxx-xxx-xx",   //虚拟集群id
    "cluster_name": xxx-xxx-xx", //虚拟集群名称
    "domain_name": "op_svc_xxx" // 集群所使用承载租户账号
    "loadbalancers": [         // 关联的负载均衡器
        {
            "loadbalancer_id": "xxx-xxx-xxx", // 负载均衡器id
            "loadbalancer_name": "xxx-xxx-xxx", //负载均衡器名称
            "public_ips": [                    // 公网ip
                {
                    "publicip_address": "xx.xx.xx.xx", //IP 地址，入口IP
                    "ip_version": 4     //IP版本信息。 取值范围：4和6 4：IPv4 6：IPv6
                }
            ]
        }
    ],
    "servers": [        // 后端服务器组
        {
            "server_id": "xxx-xxx-xxx", // 后端服务器id
            "server_name": "xxx-xxx-xxx", //后端服务器名称
            "float_ip": xxx.xxx.xxx.xxx, // 浮动IP
            "public_ips": [                    // 公网ip
                {
                    "publicip_address": "xx.xx.xx.xx", //IP 地址，回源IP
                    "ip_version": 4     //IP版本信息。 取值范围：4和6 4：IPv4 6：IPv6
                }
            ]
        }
    ],
    "update_time": xxxxxxxxxx   // 记录更新时间
}
